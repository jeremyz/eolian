{
  "name": "Evas_Object_Image", 
  "macro": "EVAS_OBJ_IMAGE_CLASS", 
  "inherits": [
    "Evas_Object"
  ], 
  "constructors": {}, 
  "properties": {
    "load_dpi": {
      "comment_set": "Set the DPI resolution of an image object's source image.", 
      "comment_get": "Get the DPI resolution of a loaded image object in the canvas.", 
      "parameters": [
        [
          "", 
          "double", 
          "dpi", 
          "in"
        ]
      ]
    }, 
    "source_clip": {
      "comment_set": "Apply the source object's clip to the proxy", 
      "comment_get": "Get the state of the source clip", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "source_clip", 
          "in"
        ]
      ]
    }, 
    "filled": {
      "comment_set": "Set whether the image object's fill property should track the object's size.", 
      "comment_get": "Retrieve whether the image object's fill property should track the object's size.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "filled", 
          "in"
        ]
      ]
    }, 
    "content_hint": {
      "comment_set": "Set the content hint setting of a given image object of the canvas.", 
      "comment_get": "Get the content hint setting of a given image object of the canvas.", 
      "parameters": [
        [
          "", 
          "Evas_Image_Content_Hint", 
          "hint", 
          "in"
        ]
      ]
    }, 
    "load_region": {
      "comment_set": "Inform a given image object to load a selective region of its source image.", 
      "comment_get": "Retrieve the coordinates of a given image object's selective (source image) load region.", 
      "parameters": [
        [
          "", 
          "int", 
          "x", 
          "in"
        ], 
        [
          "", 
          "int", 
          "y", 
          "in"
        ], 
        [
          "", 
          "int", 
          "w", 
          "in"
        ], 
        [
          "", 
          "int", 
          "h", 
          "in"
        ]
      ]
    }, 
    "alpha": {
      "comment_set": "Enable or disable alpha channel usage on the given image object.", 
      "comment_get": "Retrieve whether alpha channel data is being used on the given image object.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "alpha", 
          "in"
        ]
      ]
    }, 
    "load_size": {
      "comment_set": "Set the size of a given image object's source image, when loading it.", 
      "comment_get": "Get the size of a given image object's source image, when loading it.", 
      "parameters": [
        [
          "", 
          "int", 
          "w", 
          "in"
        ], 
        [
          "", 
          "int", 
          "h", 
          "in"
        ]
      ]
    }, 
    "border": {
      "comment_set": "Set the dimensions for an image object's border, a region which won't ever be scaled together with its center.", 
      "comment_get": "Retrieve the dimensions for an image object's border, a region which", 
      "parameters": [
        [
          "", 
          "int", 
          "l", 
          "in"
        ], 
        [
          "", 
          "int", 
          "r", 
          "in"
        ], 
        [
          "", 
          "int", 
          "t", 
          "in"
        ], 
        [
          "", 
          "int", 
          "b", 
          "in"
        ]
      ]
    }, 
    "smooth_scale": {
      "comment_set": "Sets whether to use high-quality image scaling algorithm on the given image object.", 
      "comment_get": "Retrieves whether the given image object is using high-quality image scaling algorithm.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "smooth_scale", 
          "in"
        ]
      ]
    }, 
    "border_scale": {
      "comment_set": "Sets the scaling factor (multiplier) for the borders of an image object.", 
      "comment_get": "Retrieves the scaling factor (multiplier) for the borders of an image object.", 
      "parameters": [
        [
          "", 
          "double", 
          "scale", 
          "in"
        ]
      ]
    }, 
    "pixels_dirty": {
      "comment_set": "Mark whether the given image object is dirty (needs to be redrawn).", 
      "comment_get": "Retrieves whether the given image object is dirty (needs to be redrawn).", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "dirty", 
          "in"
        ]
      ]
    }, 
    "video_surface": {
      "comment_set": "Set the video surface linked to a given image of the canvas", 
      "comment_get": "Get the video surface linked to a given image of the canvas", 
      "parameters": [
        [
          "", 
          "Evas_Video_Surface*", 
          "surf", 
          "in"
        ]
      ]
    }, 
    "video_surface_caps": {
      "comment_set": "Set the video surface capabilities to a given image of the canvas", 
      "comment_get": "Get the video surface capabilities to a given image of the canvas", 
      "parameters": [
        [
          "", 
          "unsigned int", 
          "caps", 
          "in"
        ]
      ]
    }, 
    "load_orientation": {
      "comment_set": "Define if the orientation information in the image file should be honored.", 
      "comment_get": "Get if the orientation information in the image file should be honored.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "enable", 
          "in"
        ]
      ]
    }, 
    "fill_spread": {
      "comment_set": "Sets the tiling mode for the given evas image object's fill.", 
      "comment_get": "Retrieves the spread (tiling mode) for the given image object's fill.", 
      "parameters": [
        [
          "", 
          "Evas_Fill_Spread", 
          "spread", 
          "in"
        ]
      ]
    }, 
    "file": {
      "comment_set": "Set the source file from where an image object must fetch the real image data (it may be an Eet file, besides pure image ones).", 
      "comment_get": "Retrieve the source file from where an image object is to fetch the real image data (it may be an Eet file, besides pure image ones). one). You must interested in: they'll be ignored by the function.", 
      "parameters": [
        [
          "const", 
          "char*", 
          "file", 
          "The image file path"
        ], 
        [
          "const", 
          "char*", 
          "key", 
          "The image key in @p file (if its an Eet one), or @c"
        ]
      ]
    }, 
    "border_center_fill": {
      "comment_set": "Sets borders) should be drawn when Evas is rendering it.", 
      "comment_get": "Retrieves borders) is to be drawn when Evas is rendering it.", 
      "parameters": [
        [
          "", 
          "Evas_Border_Fill_Mode", 
          "fill", 
          "in"
        ]
      ]
    }, 
    "size": {
      "comment_set": "Sets the size of the given image object.", 
      "comment_get": "Retrieves the size of the given image object.", 
      "parameters": [
        [
          "", 
          "int", 
          "w", 
          "in"
        ], 
        [
          "", 
          "int", 
          "h", 
          "in"
        ]
      ]
    }, 
    "source_visible": {
      "comment_set": "Set the source object to be shown or hidden.", 
      "comment_get": "Get the state of the source object visibility.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "visible", 
          "in"
        ]
      ]
    }, 
    "fill": {
      "comment_set": "Set how to fill an image object's drawing rectangle given the (real) image bound to it.", 
      "comment_get": "Retrieve how an image object is to fill its drawing rectangle, given the (real) image bound to it.", 
      "parameters": [
        [
          "", 
          "Evas_Coord", 
          "x", 
          "in"
        ], 
        [
          "", 
          "Evas_Coord", 
          "y", 
          "in"
        ], 
        [
          "", 
          "Evas_Coord", 
          "w", 
          "in"
        ], 
        [
          "", 
          "Evas_Coord", 
          "h", 
          "in"
        ]
      ]
    }, 
    "native_surface": {
      "comment_set": "Set the native surface of a given image of the canvas", 
      "comment_get": "Get the native surface of a given image of the canvas", 
      "parameters": [
        [
          "", 
          "Evas_Native_Surface*", 
          "surf", 
          "in"
        ]
      ]
    }, 
    "load_scale_down": {
      "comment_set": "Set the scale down factor of a given image object's source image, when loading it.", 
      "comment_get": "Get the scale down factor of a given image object's source image, when loading it.", 
      "parameters": [
        [
          "", 
          "int", 
          "scale_down", 
          "in"
        ]
      ]
    }, 
    "scale_hint": {
      "comment_set": "Set the scale hint of a given image of the canvas.", 
      "comment_get": "Get the scale hint of a given image of the canvas.", 
      "parameters": [
        [
          "", 
          "Evas_Image_Scale_Hint", 
          "hint", 
          "in"
        ]
      ]
    }, 
    "source_events": {
      "comment_set": "Set events to be repeated to the source object.", 
      "comment_get": "Get the state of the source event.", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "source", 
          "in"
        ]
      ]
    }, 
    "colorspace": {
      "comment_set": "Set the colorspace of a given image of the canvas.", 
      "comment_get": "Get the colorspace of a given image of the canvas.", 
      "parameters": [
        [
          "", 
          "Evas_Colorspace", 
          "cspace", 
          "in"
        ]
      ]
    }, 
    "pixels_get_callback": {
      "comment": "Set the callback function to get pixels from a canvas' image.", 
      "type": "wo", 
      "parameters": [
        [
          "", 
          "Evas_Object_Image_Pixels_Get_Cb", 
          "func", 
          "in"
        ], 
        [
          "", 
          "void*", 
          "data", 
          "in"
        ]
      ]
    }, 
    "mmap": {
      "comment": "Set the source mmaped file from where an image object must fetch the real image data (it may be any Eina_File).", 
      "type": "wo", 
      "parameters": [
        [
          "", 
          "Eina_File*", 
          "f", 
          "in"
        ], 
        [
          "const", 
          "char*", 
          "key", 
          "in"
        ]
      ]
    }, 
    "data_copy": {
      "comment": "Replaces the raw image data of the given image object.", 
      "type": "wo", 
      "parameters": [
        [
          "", 
          "void*", 
          "data", 
          "in"
        ]
      ]
    }, 
    "animated_frame": {
      "comment": "Set the frame to current frame of an image object", 
      "type": "wo", 
      "parameters": [
        [
          "", 
          "int", 
          "frame_index", 
          "in"
        ]
      ]
    }, 
    "region_support": {
      "comment": "Get the support state of a given image", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "region", 
          "out"
        ]
      ]
    }, 
    "load_error": {
      "comment": "Retrieves a number representing any error that occurred during the last loading of the given image object's source image.", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "Evas_Load_Error", 
          "load_error", 
          ""
        ]
      ]
    }, 
    "animated_frame_count": {
      "comment": "Get the total number of frames of the image object.", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "int", 
          "frame_count", 
          "out"
        ]
      ]
    }, 
    "stride": {
      "comment": "Retrieves the row stride of the given image object.", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "int", 
          "stride", 
          "out"
        ]
      ]
    }, 
    "animated": {
      "comment": "Check if an image object can be animated (have multiple frames)", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "Eina_Bool", 
          "animated", 
          "out"
        ]
      ]
    }, 
    "animated_loop_type": {
      "comment": "Get the kind of looping the image object does.", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "Evas_Image_Animated_Loop_Hint", 
          "hint", 
          "out"
        ]
      ]
    }, 
    "animated_loop_count": {
      "comment": "Get the number times the animation of the object loops.", 
      "type": "ro", 
      "parameters": [
        [
          "", 
          "int", 
          "loop_count", 
          "out"
        ]
      ]
    }
  }, 
  "methods": {
    "source_set": {
      "comment": "Set the source object on an image object to used as a", 
      "parameters": [
        [
          "in", 
          "", 
          "Evas_Object*", 
          "src", 
          "in"
        ], 
        [
          "out", 
          "", 
          "Eina_Bool", 
          "result", 
          "out"
        ]
      ]
    }, 
    "source_get": {
      "comment": "Get the current source object of an image object.", 
      "parameters": [
        [
          "out", 
          "", 
          "Evas_Object*", 
          "src", 
          "out"
        ]
      ]
    }, 
    "preload_begin": {
      "comment": "Begin preloading an image object's image data in the background", 
      "parameters": []
    }, 
    "data_update_add": {
      "comment": "Mark a sub-region of the given image object to be redrawn.", 
      "parameters": [
        [
          "in", 
          "", 
          "int", 
          "x", 
          "in"
        ], 
        [
          "in", 
          "", 
          "int", 
          "y", 
          "in"
        ], 
        [
          "in", 
          "", 
          "int", 
          "w", 
          "in"
        ], 
        [
          "in", 
          "", 
          "int", 
          "h", 
          "in"
        ]
      ]
    }, 
    "animated_frame_duration_get": {
      "comment": "Get the duration of a sequence of frames.", 
      "parameters": [
        [
          "in", 
          "", 
          "int", 
          "start_frame", 
          "in"
        ], 
        [
          "in", 
          "", 
          "int", 
          "frame_num", 
          "in"
        ], 
        [
          "out", 
          "", 
          "double", 
          "frame_duration", 
          "out"
        ]
      ]
    }, 
    "save": {
      "comment": "Save the given image object's contents to an (image) file.", 
      "parameters": [
        [
          "in", 
          "const", 
          "char*", 
          "file", 
          "in"
        ], 
        [
          "in", 
          "const", 
          "char*", 
          "key", 
          "in"
        ], 
        [
          "in", 
          "const", 
          "char*", 
          "flags", 
          "in"
        ], 
        [
          "out", 
          "", 
          "Eina_Bool", 
          "result", 
          "out"
        ]
      ]
    }, 
    "data_set": {
      "comment": "Sets the raw image data of the given image object.", 
      "parameters": [
        [
          "in", 
          "", 
          "void*", 
          "data", 
          "in"
        ]
      ]
    }, 
    "data_get": {
      "comment": "Get a pointer to the raw image data of the given image object.", 
      "parameters": [
        [
          "in", 
          "", 
          "Eina_Bool", 
          "for_writing", 
          "in"
        ], 
        [
          "out", 
          "", 
          "void*", 
          "data", 
          "out"
        ]
      ]
    }, 
    "preload_cancel": {
      "comment": "Cancel preloading an image object's image data in the background", 
      "parameters": []
    }, 
    "data_convert": {
      "comment": "Converts the raw image data of the given image object to the specified colorspace.", 
      "parameters": [
        [
          "in", 
          "", 
          "Evas_Colorspace", 
          "to_cspace", 
          "in"
        ], 
        [
          "out", 
          "", 
          "void*", 
          "data", 
          "out"
        ]
      ]
    }, 
    "pixels_import": {
      "comment": "Import pixels from given source to a given canvas image object.", 
      "parameters": [
        [
          "in", 
          "", 
          "Evas_Pixel_Import_Source*", 
          "pixels", 
          "in"
        ], 
        [
          "out", 
          "", 
          "Eina_Bool", 
          "result", 
          "out"
        ]
      ]
    }, 
    "reload": {
      "comment": "Reload an image object's image data.", 
      "parameters": []
    }
  }, 
  "implements": [
    [
      "Eo Base", 
      "destructor", 
      "method"
    ], 
    [
      "Eo Base", 
      "dbg_info_get", 
      "method"
    ], 
    [
      "Eo Base", 
      "constructor", 
      "method"
    ]
  ]
}